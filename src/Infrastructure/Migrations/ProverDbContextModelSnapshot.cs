// <auto-generated />
using System;
using Infrastructure.EntityFrameworkSqlDataAccess.Storage;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ProverDbContext))]
    partial class ProverDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1");

            modelBuilder.Entity("Infrastructure.EntityFrameworkSqlDataAccess.Entities.EvcVerificationSql", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("ArchivedDateTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DeviceType")
                        .HasColumnName("DeviceTypeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeviceValues")
                        .HasColumnName("DeviceData")
                        .HasColumnType("TEXT");

                    b.Property<string>("InputDriveType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("TestDateTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EvcVerifications");
                });

            modelBuilder.Entity("Infrastructure.EntityFrameworkSqlDataAccess.Entities.VerificationTestPointSql", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("AppliedInput")
                        .HasColumnType("TEXT");

                    b.Property<string>("EndData")
                        .HasColumnName("EndData")
                        .HasColumnType("TEXT");

                    b.Property<string>("StartData")
                        .HasColumnName("StartData")
                        .HasColumnType("TEXT");

                    b.Property<int>("TestNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("VerificationTestPoints");
                });
#pragma warning restore 612, 618
        }
    }
}
