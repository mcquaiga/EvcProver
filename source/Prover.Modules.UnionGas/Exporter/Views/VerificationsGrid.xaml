<UserControl
    x:Class="Prover.Modules.UnionGas.Exporter.Views.VerificationsGrid"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:evcVerifications="clr-namespace:Prover.Domain.EvcVerifications;assembly=Prover.Domain"
    xmlns:local="clr-namespace:Prover.Modules.UnionGas.Exporter.Views"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:Prover.Modules.UnionGas.Models"
    xmlns:rx="http://reactiveui.net"
    x:Name="VerificationsGridControl"
    d:DataContext="{d:DesignInstance models:EvcVerificationProxy,
                                     IsDesignTimeCreatable=False}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Client.Desktop.Wpf;component/Resources.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.datagrid.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.textblock.xaml" />

            </ResourceDictionary.MergedDictionaries>

            <SolidColorBrush x:Key="PassColour" Color="ForestGreen" />
            <SolidColorBrush x:Key="FailColour" Color="IndianRed" />

            <Style x:Key="PassFailIcon" TargetType="materialDesign:PackIcon">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Test.Verified}" Value="True">
                        <Setter Property="Kind" Value="Check" />
                        <Setter Property="Foreground" Value="{StaticResource PassColour}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Test.Verified}" Value="False">
                        <Setter Property="Kind" Value="AlertCircleOutline" />
                        <Setter Property="Foreground" Value="{StaticResource FailColour}" />
                    </DataTrigger>
                </Style.Triggers>
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Width" Value="32" />
                <Setter Property="Height" Value="32" />
            </Style>

            <Style BasedOn="{StaticResource MaterialDesignDataGridCell}" TargetType="{x:Type DataGridCell}">
                <Setter Property="FontSize" Value="16" />
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <DataGrid
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Stretch"
            AutoGenerateColumns="False"
            EnableColumnVirtualization="True"
            EnableRowVirtualization="True"
            IsReadOnly="True"
            ItemsSource="{Binding}"
            SelectionMode="Extended">
            <DataGrid.ColumnHeaderStyle>
                <Style
                    x:Name="DataGridColumnHeadersStyle"
                    BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}"
                    TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="Height" Value="50" />
                    <Setter Property="FontSize" Value="14" />

                </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.RowStyle>
                <Style BasedOn="{StaticResource MaterialDesignDataGridRow}" TargetType="{x:Type DataGridRow}">
                    <Setter Property="HorizontalAlignment" Value="Left" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="VerticalAlignment" Value="Top" />
                    <Setter Property="VerticalContentAlignment" Value="Top" />
                    <Setter Property="Height" Value="Auto" />
                    <!--<Setter Property="Foreground" Value="Black" />-->
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True" />
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.Columns>
                <DataGridCheckBoxColumn Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}" SortMemberPath="IsSelected">

                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style BasedOn="{StaticResource MaterialDesignActionCheckBox}" TargetType="{x:Type CheckBox}">
                            <Setter Property="Width" Value="32" />
                            <Setter Property="Height" Value="32" />
                            <Setter Property="Margin" Value="4" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsLocked}" Value="False">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsLocked}" Value="True">
                                    <Setter Property="Visibility" Value="Hidden" />
                                </DataTrigger>

                            </Style.Triggers>
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>

                </DataGridCheckBoxColumn>
                <DataGridTemplateColumn
                    Width="80"
                    Header="Verified"
                    SortMemberPath="Test.Verified">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="Margin" Value="0" />
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="Height" Value="50" />
                            <Setter Property="FontSize" Value="14" />
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <materialDesign:PackIcon x:Name="VerifiedStatusIcon" Style="{StaticResource PassFailIcon}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Width="Auto" Header="Device">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>

                            <StackPanel
                                Margin="4"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Orientation="Vertical">
                                <TextBlock
                                    x:Name="DeviceTypeTextBlock"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    FontSize="24"
                                    Text="{Binding Test.Device.DeviceType.Name, Mode=OneTime}" />



                                <TextBlock
                                    x:Name="DriveTypeTextBlock"
                                    HorizontalAlignment="Left"
                                    Text="{Binding Test.DriveType.InputType, Mode=OneTime}" />

                                <TextBlock
                                    x:Name="CompositionTypeTextBlock"
                                    HorizontalAlignment="Left"
                                    Text="{Binding Composition, Mode=OneTime}" />
                            </StackPanel>


                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>

                </DataGridTemplateColumn>

                <materialDesign:DataGridTextColumn
                    x:Name="DateTestedColumn"
                    Binding="{Binding Test.TestDateTime, Mode=OneTime}"
                    Header="Date Tested" />

                <materialDesign:DataGridTextColumn
                    x:Name="InventoryNumberColumn"
                    Binding="{Binding InventoryNumber, Mode=OneTime}"
                    Header="Inventory #" />

                <materialDesign:DataGridTextColumn
                    x:Name="SerialNumberColumn"
                    Binding="{Binding SerialNumber, Mode=OneTime}"
                    Header="Serial #"
                    SortMemberPath="" />

                <materialDesign:DataGridTextColumn
                    x:Name="JobIdColumn"
                    Binding="{Binding Test.JobId, Mode=OneWay}"
                    Header="Job #" />

                <materialDesign:DataGridTextColumn
                    x:Name="EmployeeColumn"
                    Binding="{Binding Employee.EmployeeName, Mode=OneWay}"
                    Header="Employee" />

                <materialDesign:DataGridTextColumn
                    x:Name="ExportedColumn"
                    Binding="{Binding Test.ExportedDateTime, Mode=OneWay}"
                    Header="Exported" />

                <materialDesign:DataGridTextColumn
                    x:Name="ArchivedColumn"
                    Binding="{Binding Test.ArchivedDateTime, Mode=OneWay}"
                    Header="Archived" />


                <DataGridTemplateColumn Width="*">

                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button
                                x:Name="PrintTestReportButton"
                                Margin="15,4,50,4"
                                HorizontalAlignment="Right"
                                Command="{Binding ViewReport}"
                                CommandParameter="{Binding Test}"
                                Style="{StaticResource MaterialDesignIconForegroundButton}"
                                ToolTip="View QA Test Report">
                                <materialDesign:PackIcon
                                    Width="36"
                                    Height="36"
                                    Foreground="Gray"
                                    Kind="PrintPreview" />
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>

                </DataGridTemplateColumn>
            </DataGrid.Columns>

        </DataGrid>
    </Grid>
</UserControl>
