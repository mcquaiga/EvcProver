<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Client.Desktop.Wpf.Views.Verifications"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">
    <Style
        x:Key="TestManagerStyle"
        BasedOn="{StaticResource {x:Type UserControl}}"
        TargetType="UserControl">
        <!--  Based on the default Window template (extracted from Blend)  -->
        <!--  NB: We are only handling the default case where ResizeMode=CanResizeWithGrid.  -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type UserControl}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <AdornerDecorator>
                                <StackPanel Orientation="Vertical">
                                    <local:QaTestRunView />

                                    <ContentPresenter />

                                </StackPanel>
                            </AdornerDecorator>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
                        </MultiTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--  Replaced the default brushes with the ones from MDIX. This allows the theming to propagate properly.  -->
        <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>-->
        <!--<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />-->
        <Setter Property="TextElement.Foreground" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}" />
    </Style>
</ResourceDictionary>