<reactiveUi:ReactiveUserControl
	x:Class="Prover.UI.Desktop.Views.Verifications.TestManagerView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:interfaces="clr-namespace:Prover.Application.Interfaces;assembly=Prover.Application"
	xmlns:managers="clr-namespace:Prover.UI.Desktop.Views.Verifications"
	xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:reactiveUi="http://reactiveui.net"
	xmlns:verifications="clr-namespace:Prover.UI.Desktop.ViewModels.Verifications"
	x:Name="TestManagerControl"
	d:DataContext="{d:DesignInstance verifications:TestManager,
	                                 IsDesignTimeCreatable=False}"
	d:DesignHeight="450"
	d:DesignWidth="800"
	x:TypeArguments="interfaces:IDeviceQaTestManager"
	mc:Ignorable="d">
	<UserControl.Resources>
		<DataTemplate x:Key="CorrectionsTestDataTemplate">
			<Button
				x:Name="DownloadButton"
				Width="Auto"
				Height="35"
				Margin="5"
				HorizontalAlignment="Right"
				Command="{Binding ViewModel.RunCorrectionVerifications, RelativeSource={RelativeSource AncestorType={x:Type managers:TestManagerView}}}"
				CommandParameter="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type Border}}}"
				Content="{materialDesign:PackIcon Kind=PlayArrow,
				                                  Size=28}"
				Style="{StaticResource MaterialDesignRaisedDarkButton}" />
		</DataTemplate>

		<DataTemplate x:Key="RotaryVolumeContentControlTemplate">
			<Button
				Width="120"
				Height="28"
				Margin="4,0"
				Command="{Binding ViewModel.RunVolumeVerifications, RelativeSource={RelativeSource AncestorType={x:Type managers:TestManagerView}}}"
				Content="{materialDesign:PackIcon Kind=PlayArrow,
				                                  Size=20}"
				Style="{StaticResource MaterialDesignRaisedDarkButton}" />

		</DataTemplate>

		<DataTemplate x:Key="ToolbarControl">
			<UniformGrid
				MinHeight="250"
				Margin="0,8"
				HorizontalAlignment="Center"
				VerticalAlignment="Center"
				Columns="1">
				<UniformGrid.Resources>
					<Style BasedOn="{StaticResource MaterialDesignFlatButton}" TargetType="{x:Type Button}">
						<Setter Property="Width" Value="Auto" />
						<Setter Property="Height" Value="Auto" />
						<Setter Property="Margin" Value="0,12" />
						<Setter Property="HorizontalAlignment" Value="Left" />
					</Style>
					<Style TargetType="materialDesign:PackIcon">
						<Setter Property="Width" Value="36" />
						<Setter Property="Height" Value="36" />
						<Setter Property="FontSize" Value="64" />
					</Style>
				</UniformGrid.Resources>
				<Button
					x:Name="SaveButton"
					Command="{Binding ViewModel.SaveCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"
					Content="{materialDesign:PackIcon ContentSave}" />

				<Button
					x:Name="PrintButton"
					Command="{Binding ViewModel.PrintTestReport, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"
					Content="{materialDesign:PackIcon Printer}" />

				<Button
					x:Name="SubmitTestButton"
					Command="{Binding ViewModel.SubmitTest, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"
					Content="{materialDesign:PackIcon Send}" />


			</UniformGrid>


		</DataTemplate>
	</UserControl.Resources>

	<Grid HorizontalAlignment="Stretch">

		<reactiveUi:ViewModelViewHost
			x:Name="TestViewContent"
			Grid.Row="0"
			HorizontalAlignment="Center"
			VerticalAlignment="Center"
			HorizontalContentAlignment="Center"
			VerticalContentAlignment="Center">
			<reactiveUi:ViewModelViewHost.Resources />
		</reactiveUi:ViewModelViewHost>

		<!--<materialDesign:Snackbar
			x:Name="ActionSnackbar"
			HorizontalAlignment="Right"
			VerticalAlignment="Center"
			d:LayoutOverrides="All">
			<materialDesign:Snackbar.Resources>
				<Style BasedOn="{StaticResource {x:Type materialDesign:SnackbarMessage}}" TargetType="materialDesign:SnackbarMessage">
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="materialDesign:SnackbarMessage">
								<StackPanel Orientation="Vertical">
									<ContentPresenter
										Height="250"
										HorizontalAlignment="Left"
										VerticalAlignment="Center"
										Content="{TemplateBinding Content}"
										ContentStringFormat="{TemplateBinding ContentStringFormat}"
										ContentTemplate="{TemplateBinding ContentTemplate}"
										ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />

									-->
		<!--  Needed by the template, wont use it though  -->
		<!--

									<Button
										x:Name="PART_YesActionButton"
										HorizontalAlignment="Right"
										VerticalAlignment="Bottom"
										Content="Yes"
										Visibility="Collapsed" />

									-->
		<!--<Button
                                        x:Name="PART_NoActionButton"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Bottom"
                                        Content="No" />-->
		<!--
								</StackPanel>
							</ControlTemplate>
						</Setter.Value>

					</Setter>
					<Setter Property="ActionContentTemplate">
						<Setter.Value>
							<DataTemplate>
								<StackPanel>
									<Button
										x:Name="PART_YesActionButton"
										HorizontalAlignment="Right"
										VerticalAlignment="Bottom"
										Content="SUBMIT" />
								</StackPanel>

							</DataTemplate>
						</Setter.Value>
					</Setter>
					<Setter Property="Background" Value="White" />
				</Style>
			</materialDesign:Snackbar.Resources>
			<materialDesign:SnackbarMessage
				x:Name="ActionSnackbarMessage"
				HorizontalAlignment="Stretch"
				ActionContent="SUBMIT" />

		</materialDesign:Snackbar>-->

	</Grid>


</reactiveUi:ReactiveUserControl>
