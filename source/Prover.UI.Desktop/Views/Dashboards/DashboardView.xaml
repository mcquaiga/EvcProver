<reactiveUi:ReactiveUserControl
	x:Class="Prover.UI.Desktop.Views.Dashboards.DashboardView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="clr-namespace:Prover.UI.Desktop.Controls"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:dashboard="clr-namespace:Prover.Application.Dashboard;assembly=Prover.Application"
	xmlns:generic="clr-namespace:System.Collections.Generic;assembly=System.Collections"
	xmlns:local="clr-namespace:Prover.UI.Desktop.Views"
	xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:reactiveUi="http://reactiveui.net"
	d:DataContext="{d:DesignInstance dashboard:DashboardViewModel}"
	d:DesignHeight="450"
	d:DesignWidth="800"
	x:TypeArguments="dashboard:DashboardViewModel"
	mc:Ignorable="d">
	<UserControl.Resources>
		<ResourceDictionary>
			<Style x:Key="DateFilterButton" TargetType="{x:Type Button}" />
			<Style x:Key="RacePitBorderStyle" TargetType="Border">
				<Style.Resources>
					<LinearGradientBrush x:Key="BackBrush" StartPoint="0.5,0" EndPoint="0.5,1">
						<GradientStop Offset="0.1" Color="#EF3132" />
						<GradientStop Offset="0.9" Color="#D62B2B" />
					</LinearGradientBrush>
				</Style.Resources>
				<Setter Property="Background" Value="{StaticResource BackBrush}" />
			</Style>

			<DataTemplate x:Key="titleText">
				<Border Height="24" Style="{StaticResource RacePitBorderStyle}">
					<TextBlock
						Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Expander}}, Path=ActualWidth}"
						Margin="4,0"
						VerticalAlignment="Center"
						FontSize="11"
						FontWeight="Normal"
						Foreground="White"
						Text="{Binding}"
						TextWrapping="Wrap" />
				</Border>
			</DataTemplate>


			<CollectionViewSource x:Key="DashboardListBoxItems" Source="{Binding DashboardItems}">
				<CollectionViewSource.GroupDescriptions>
					<PropertyGroupDescription PropertyName="GroupName" />
				</CollectionViewSource.GroupDescriptions>
			</CollectionViewSource>

			<Style
				x:Key="DashboardExpanderStyle"
				BasedOn="{StaticResource MaterialDesignExpander}"
				TargetType="{x:Type Expander}">
				<Style.Setters>

					<!--<Setter Property="HeaderTemplate">
                        <Setter.Value />
                    </Setter>-->
				</Style.Setters>
			</Style>

		</ResourceDictionary>

	</UserControl.Resources>
	<DockPanel Margin="15,5">

		<Grid
			HorizontalAlignment="Stretch"
			VerticalAlignment="Top"
			DockPanel.Dock="Top">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>


			<StackPanel Orientation="Vertical">
				<TextBlock
					x:Name="AppTitleHeader"
					Height="Auto"
					Margin="15,0,15,0"
					Padding="2"
					VerticalAlignment="Bottom"
					FontSize="48"
					FontWeight="Light"
					Style="{StaticResource MaterialDesignHeadline4TextBlock}">
					EVC Prover
				</TextBlock>

			</StackPanel>

			<ListBox
				x:Name="DateFiltersControl"
				Grid.Column="2"
				Margin="8,5"
				HorizontalAlignment="Right"
				VerticalAlignment="Center"
				Style="{StaticResource MaterialDesignListBox}">
				<ListBox.Resources />
				<ListBox.ItemsPanel>
					<ItemsPanelTemplate>
						<VirtualizingStackPanel
							Margin="5,1"
							HorizontalAlignment="Right"
							Orientation="Horizontal" />
					</ItemsPanelTemplate>
				</ListBox.ItemsPanel>
				<ListBox.ItemContainerStyle>
					<Style TargetType="{x:Type ListBoxItem}">
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type ListBoxItem}">
									<ContentPresenter />
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</ListBox.ItemContainerStyle>
				<ListBox.ItemTemplate>
					<DataTemplate>
						<RadioButton
							Margin="0"
							Padding="0"
							Command="{Binding ViewModel.ApplyDateFilter, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
							CommandParameter="{Binding}"
							Content="{Binding}"
							FontSize="20"
							GroupName="DateFilterGroup"
							Style="{StaticResource MaterialDesignTabRadioButton}">
							<RadioButton.IsChecked>
								<Binding
									Mode="TwoWay"
									Path="IsSelected"
									RelativeSource="{RelativeSource AncestorType=ListBoxItem}" />
							</RadioButton.IsChecked>
						</RadioButton>
					</DataTemplate>
				</ListBox.ItemTemplate>
			</ListBox>
			<StackPanel
				Grid.Column="1"
				Margin="15"
				HorizontalAlignment="Left"
				VerticalAlignment="Center"
				Orientation="Horizontal">

				<Button
					x:Name="RefreshDataButton"
					materialDesign:ButtonProgressAssist.IsIndeterminate="True"
					materialDesign:ButtonProgressAssist.IsIndicatorVisible="{Binding IsLoading, Mode=OneWay}"
					materialDesign:ButtonProgressAssist.Value="-1"
					Background="{StaticResource MaterialDesignPaper}"
					Content="{materialDesign:PackIcon Kind=Refresh,
					                                  Size=36}"
					Style="{StaticResource MainToolbarButtonStyle}">
					<!--<Button.Content>
						<materialDesign:PackIcon
							Width="32"
							Height="32"
							Kind="Refresh"
							Style="{StaticResource MainToolbarPackIconStyle}" />
					</Button.Content>-->
				</Button>
				<StackPanel
					x:Name="IsLoadingStateContent"
					Margin="5,4"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					Orientation="Vertical"
					Visibility="Collapsed">
					<TextBlock Style="{StaticResource MaterialDesignHeadline5TextBlock}" Text="Loading..." />
					<ProgressBar IsIndeterminate="True" Style="{StaticResource MaterialDesignLinearProgressBar}" />
				</StackPanel>


			</StackPanel>

		</Grid>



		<!--
			materialDesign:ButtonProgressAssist.IsIndicatorVisible="{Binding IsLoading, Mode=OneWay}"
			Visibility="{Binding RefreshData.IsExecuting, Converter={StaticResource IfFalseCollapseConverter}}"
			Visibility="{Binding RefreshData.IsExecuting, Converter={StaticResource IfTrueCollapseConverter}}"
		-->
		<Viewbox
			x:Name="DashboardViewboxContent"
			HorizontalAlignment="Left"
			DockPanel.Dock="Bottom"
			Stretch="Uniform"
			Visibility="Visible">
			<ListView
				x:Name="DashboardItemsControl"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Top"
				HorizontalContentAlignment="Stretch"
				VerticalContentAlignment="Top"
				IsEnabled="True"
				ItemsSource="{Binding Source={StaticResource DashboardListBoxItems}}">
				<ListView.ItemsPanel>
					<ItemsPanelTemplate>
						<WrapPanel
							Margin="5"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Top" />

					</ItemsPanelTemplate>
				</ListView.ItemsPanel>

				<ListView.ItemContainerStyle>
					<Style TargetType="{x:Type ListBoxItem}">
						<Setter Property="Padding" Value="0" />
						<Setter Property="Margin" Value="0" />
						<Setter Property="Focusable" Value="False" />
						<Setter Property="IsEnabled" Value="False" />

						<Setter Property="FocusVisualStyle">
							<Setter.Value>
								<Style>
									<!--  This removes focus visualization  -->
									<Setter Property="Control.Template" Value="{x:Null}" />
								</Style>
							</Setter.Value>
						</Setter>
						<!--<Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            </Trigger>
                        </Style.Triggers>-->
					</Style>
				</ListView.ItemContainerStyle>
				<ListView.GroupStyle>
					<GroupStyle>
						<GroupStyle.Panel>
							<ItemsPanelTemplate>
								<VirtualizingStackPanel
									HorizontalAlignment="Stretch"
									VerticalAlignment="Top"
									Orientation="Vertical" />
							</ItemsPanelTemplate>
						</GroupStyle.Panel>
						<GroupStyle.ContainerStyle>
							<Style TargetType="{x:Type GroupItem}">
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate>
											<Expander
												HorizontalAlignment="Stretch"
												VerticalAlignment="Top"
												HorizontalContentAlignment="Stretch"
												VerticalContentAlignment="Top"
												materialDesign:ExpanderAssist.LeftHeaderPadding="15"
												Header="{Binding}"
												IsExpanded="True"
												Style="{StaticResource DashboardExpanderStyle}">

												<ItemsPresenter HorizontalAlignment="Stretch" />

											</Expander>

										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</GroupStyle.ContainerStyle>
					</GroupStyle>
				</ListView.GroupStyle>
				<ListView.ItemTemplate>
					<DataTemplate>
						<reactiveUi:ViewModelViewHost
							Margin="15"
							HorizontalAlignment="Stretch"
							HorizontalContentAlignment="Stretch"
							ViewModel="{Binding}" />
					</DataTemplate>
				</ListView.ItemTemplate>
			</ListView>

		</Viewbox>


	</DockPanel>

</reactiveUi:ReactiveUserControl>
<!--<TreeView x:Name="DashboardItemsTreeView">
            <TreeView.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </TreeView.ItemsPanel>
            <TreeView.ItemTemplate>
                <DataTemplate DataType="{x:Type generic:Dictionary[string, ICollection[IDashboardItem]]}">
                    <TextBlock x:Name="GroupNameTextBlock"
                               Text="{Binding GroupName}"/>

                </DataTemplate>
            </TreeView.ItemTemplate>


        </TreeView>-->