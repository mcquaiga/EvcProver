<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

	<Style
		x:Key="DialogWindowStyle"
		BasedOn="{StaticResource {x:Type Window}}"
		TargetType="Window">
		<!--  Based on the default Window template (extracted from Blend)  -->
		<!--  NB: We are only handling the default case where ResizeMode=CanResizeWithGrid.  -->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Window}">
					<Border
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">
						<Grid>
							<AdornerDecorator>
								<materialDesign:DialogHost x:Name="DialogHost" Identifier="ActiveItemDialog">


									<ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />

								</materialDesign:DialogHost>
							</AdornerDecorator>

							<!--<materialDesign:Snackbar
                                x:Name="NotificationSnackBar"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                IsActive="{Binding ShowNotificationSnackBar}"
                                d:LayoutOverrides="Width">
                                <materialDesign:SnackbarMessage HorizontalAlignment="Center" Content="{Binding NotificationMessage}" />
                            </materialDesign:Snackbar>-->

							<ResizeGrip
								x:Name="WindowResizeGrip"
								HorizontalAlignment="Right"
								VerticalAlignment="Bottom"
								IsTabStop="false"
								Visibility="Collapsed" />

						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="ResizeMode" Value="CanResizeWithGrip" />
								<Condition Property="WindowState" Value="Normal" />
							</MultiTrigger.Conditions>
							<Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<!--  Replaced the default brushes with the ones from MDIX. This allows the theming to propagate properly.  -->
		<!--<Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.WindowTextBrushKey}}"/>-->
		<!--<Setter Property="Background" Value="{StaticResource {x:Static SystemColors.WindowBrushKey}}" />-->
		<Setter Property="TextElement.Foreground" Value="{StaticResource MaterialDesignBody}" />
		<Setter Property="Background" Value="{StaticResource MaterialDesignPaper}" />
	</Style>
</ResourceDictionary>